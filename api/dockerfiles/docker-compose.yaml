version: '2'
services:
  zookeeper:
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./zk-single-kafka-single/zookeeper/data:/data
      - ./zk-single-kafka-single/zookeeper/datalog:/datalog

  kafka:
    image: confluentinc/cp-kafka:4.0.0
    hostname: kafka
    ports:
      - "9092:9092"
    environment:
      # add the entry "127.0.0.1    kafka" to your /etc/hosts file
      KAFKA_ADVERTISED_LISTENERS: "PLAINTEXT://kafka:9092"
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CREATE_TOPICS: "newBook, deleteBook, newCustomer, deleteCustomer, checkoutBook, returnBook"
    volumes:
      - ./zk-single-kafka-single/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper

  libraryproducer:
      image: libraryproducer
      depends_on:
        - kafka
        - zookeeper
      ports:
        - "8080:8080"
      environment:
        SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092

  librarydb:
      image: mysql:latest
      restart: always
      environment:
        - MYSQL_ALLOW_EMPTY_PASSWORD=yes
        - MYSQL_USER=root
        - MYSQL_DATABASE=library
      volumes:
         - ./mysql-data:/mysql-data
         - ./init_mysql.sql:/docker-entrypoint-initdb.d/init_mysql.sql

  newbookconsumer:
      build:
            context: ../../consumer
            dockerfile: DockerfileNewBook
      depends_on:
        - kafka
        - zookeeper
        - libraryproducer
        - librarydb

  deletebookconsumer:
        build:
            context: ../../consumer
            dockerfile: DockerfileDeleteBook
        depends_on:
          - kafka
          - zookeeper
          - libraryproducer
          - librarydb
